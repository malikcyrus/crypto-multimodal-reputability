{"trial_id": "3", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "filters_1", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size_1", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}, {"class_name": "Float", "config": {"name": "l2_reg_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.1, "step": 0.01, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "pool_size_1", "default": 2, "conditions": [], "values": [2, 4], "ordered": true}}, {"class_name": "Float", "config": {"name": "dropout_1", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "filters_2", "default": null, "conditions": [], "min_value": 8, "max_value": 32, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "kernel_size_2", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Float", "config": {"name": "l2_reg_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.1, "step": 0.01, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "pool_size_2", "default": 2, "conditions": [], "values": [2, 4], "ordered": true}}, {"class_name": "Choice", "config": {"name": "up_sampling_size_1", "default": 2, "conditions": [], "values": [2, 4], "ordered": true}}, {"class_name": "Float", "config": {"name": "dropout_2", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "up_sampling_size_2", "default": 2, "conditions": [], "values": [2, 4], "ordered": true}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"filters_1": 64, "kernel_size_1": 3, "activation": "relu", "l2_reg_1": 0.03, "pool_size_1": 4, "dropout_1": 0.0, "filters_2": 32, "kernel_size_2": 3, "l2_reg_2": 0.08, "pool_size_2": 4, "up_sampling_size_1": 2, "dropout_2": 0.1, "up_sampling_size_2": 2, "learning_rate": 0.004389542789450444}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/home/malikcyrus/anaconda3/envs/multimodal-env/lib/python3.11/site-packages/keras/src/losses/losses.py\", line 1303, in mean_squared_error\n    return ops.mean(ops.square(y_true - y_pred), axis=-1)\n                               ~~~~~~~^~~~~~~~\nValueError: Dimensions must be equal, but are 24 and 8 for '{{node compile_loss/mse/sub}} = Sub[T=DT_FLOAT](data_1, functional_1/conv1d_4_1/Sigmoid)' with input shapes: [?,24,79], [?,8,79].\n"}